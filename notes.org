* BULK
** stdlib
   M = marker byte

   O. nil
   1. (
   2. )
   3. Array: M <dim>:Int <content>:nB
      - arrays are used whenever a vector or matrix is needed
	- an application is free to pack any kind of data
	- the semantics of the content must be inferred by the
          application; where ambiguity can appear, an application
          SHOULD enclose the array in a type-denoting form
   4. 32 bits word: M 4B
   5. 64 bits word: M 8B
   6. 128 bits word: M 16N
   7. 8 bits unsigned integer: M 1B
   8. 32, 64 or 128 bits unsigned integer: M Word
   9. 32, 64 or 128 bits signed integer: M Word

** BULK core namespace
   NSID: 0x10

   1. ( version Int Int )
   2. ( ns <id>:Int <uuid>:Word )
   3. ( ns* <id>:Int <uuid>:Word )
   4. ( stringenc <id> )
   5. ( iana-charset Int)
   6. ( codepage Int )
   7. true
   8. false

** BULK arithmetic namespace
   NSID: 0x11

   1. ( frac Int Int )
   2. ( bigint Array )
   3. ( binary <bits> )
   4. ( decimal <bits> )


   Binary and decimal FP are defined in IEEE 754-2008 3.4âˆ’6. They are
   specified only for multiples of 32 bits (and binary for 16 bits,
   which is not included here).

** XML Infoset namespace
   urn:uuid:a2a97ec6-85f9-5aed-89b2-7ca3cafc2093 (BULK
   http://www.w3.org/TR/2004/REC-xml-infoset-20040204/)

   1. Infoset
   2. Document
   3. Element
   4. Attribute
   5. Processing instruction
   6. Unexpanded entity
   7. Comment
   8. DTD
   9. Unparsed entity
   10. Notation
   11. NS

** RDF namespace
   urn:uuid:ed460331-a89b-5742-a8de-907dff727779 (BULK
   [[http://www.w3.org/1999/02/22-rdf-syntax-ns#]])

** Efficient XML/BULK transformation
   BULK equivalent to XML Schema, used by an application to compact
   XML to the fullest.

   - enumeration attributes become a single reference instead of a
     form enclosing a string
   - macrology may be defined to further compact common use cases

** Asking input
   - test https://github.com/eishay/jvm-serializers?
